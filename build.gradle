buildscript {
    repositories {
        mavenCentral()
        maven { url = 'https://maven.minecraftforge.net/' }
       // maven { url = 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.13.0'
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}

apply plugin: 'com.palantir.git-version'
apply plugin: 'net.minecraftforge.gradle'

version = gitVersion()
group = 'the_fireplace.ias'
archivesBaseName = 'InGameAccountSwitcher-1.12.2'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = JavaVersion.VERSION_1_8


minecraft {
    //replace '${version}', project.version
    //replace '${secretSalt}', project.hasProperty("secretSalt")? project.secretSalt : ""

    mappings channel: 'snapshot', version: '20171003-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
}

processResources {
    inputs.property "version", project.version
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

tasks.register('showVersion') {
    description "Displays the current version"
    group "help"

    compileJava.dependsOn showVersion
    deobfCompileDummyTask.dependsOn showVersion
    extractMcpMappings.dependsOn showVersion

    doLast {
        def versionFile = new File(buildDir, '.version');

        versionFile.getParentFile().mkdirs();
        versionFile.text = version;
    }

    outputs.upToDateWhen { false }
}

tasks.register('deobfJar', Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

jar {
    archiveName = "${project.archivesBaseName}-${project.version.split('-')[0]}.${jar.extension}"
    manifest {
        attributes([
            "Specification-Title": "examplemod",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')